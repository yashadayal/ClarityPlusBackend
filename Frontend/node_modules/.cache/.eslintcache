[{"/home/yasha/Desktop/SPE/Frontend/src/index.js":"1","/home/yasha/Desktop/SPE/Frontend/src/reportWebVitals.js":"2","/home/yasha/Desktop/SPE/Frontend/src/App.js":"3","/home/yasha/Desktop/SPE/Frontend/src/components/Footer.js":"4","/home/yasha/Desktop/SPE/Frontend/src/components/UserFormPage.js":"5","/home/yasha/Desktop/SPE/Frontend/src/components/GuardLandingPage.js":"6","/home/yasha/Desktop/SPE/Frontend/src/components/GuardSearchPage.js":"7","/home/yasha/Desktop/SPE/Frontend/src/components/GuardAddOrderPage.js":"8","/home/yasha/Desktop/SPE/Frontend/src/components/SearchLogByDate.js":"9","/home/yasha/Desktop/SPE/Frontend/src/components/Login.js":"10","/home/yasha/Desktop/SPE/Frontend/src/components/Header.js":"11","/home/yasha/Desktop/SPE/Frontend/src/components/GuardDashboard.js":"12"},{"size":535,"mtime":1683095430532,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1683095430532,"results":"15","hashOfConfig":"14"},{"size":1544,"mtime":1683913772590,"results":"16","hashOfConfig":"14"},{"size":324,"mtime":1683095430528,"results":"17","hashOfConfig":"14"},{"size":7872,"mtime":1683913773463,"results":"18","hashOfConfig":"14"},{"size":439,"mtime":1683913773339,"results":"19","hashOfConfig":"14"},{"size":6737,"mtime":1683913773415,"results":"20","hashOfConfig":"14"},{"size":5816,"mtime":1683913773094,"results":"21","hashOfConfig":"14"},{"size":8319,"mtime":1683913773463,"results":"22","hashOfConfig":"14"},{"size":5735,"mtime":1683913773463,"results":"23","hashOfConfig":"14"},{"size":1312,"mtime":1683913773415,"results":"24","hashOfConfig":"14"},{"size":2648,"mtime":1683913773283,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1prp3yo",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yasha/Desktop/SPE/Frontend/src/index.js",[],[],"/home/yasha/Desktop/SPE/Frontend/src/reportWebVitals.js",[],[],"/home/yasha/Desktop/SPE/Frontend/src/App.js",["70","71","72"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { Routes, BrowserRouter,Route } from 'react-router-dom';\nimport { createTheme, ThemeProvider} from '@mui/material';\nimport UserFormPage from './components/UserFormPage';\nimport GuardAddOrderPage from './components/GuardAddOrderPage';\nimport Footer from './components/Footer';\nimport GuardLandingPage from './components/GuardLandingPage';\nimport GuardSearchPage from './components/GuardSearchPage';\nimport SearchLogByDate from './components/SearchLogByDate';\nimport Login from './components/Login';\n\n\nexport const theme = createTheme({\n  palette: {\n   primary:{\n     main: '#01579b',\n   },\n   secondary:{\n     main: '#b3e5fc',\n   },\n   alternate:{\n     main: '#81d4fa',\n   },\n   text:{\n     secondary: '#212121',   \n   }\n  }, \n  typography: {\n     fontFamily: \"Brygada 1918\",\n     fontWeightLight: 400,\n     fontWeightMedium: 600,\n     fontWeightBold: 700,\n     fontWeightRegular: 500\n  }\n})\n\nfunction App() {\n  return (\n    <>\n    <BrowserRouter>\n      <Routes>\n        <Route exact path='/' element={<Login/>}/>\n        <Route exact path='/userformpage' element={<UserFormPage/>}/>\n        <Route exact path='/guardaddorderpage' element={<GuardAddOrderPage/>}/> \n        <Route exact path='/searchInstituteID' element={<GuardSearchPage/>}/>\n        <Route exact path='/guardlandingpage' element={<GuardLandingPage/>}/>\n        <Route exact path='/searchlogs' element={<SearchLogByDate/>}/>\n      </Routes>\n    </BrowserRouter>\n    {/* <Footer/> */}\n    </>\n  );\n}\n\nexport default App;\n","/home/yasha/Desktop/SPE/Frontend/src/components/Footer.js",[],[],"/home/yasha/Desktop/SPE/Frontend/src/components/UserFormPage.js",["73","74","75"],[],"import React, { useState } from \"react\";\nimport {\n  Button,\n  TextField,\n  Box,\n  Grid,\n  Paper,\n  Typography,\n  FormControl,\n} from \"@mui/material\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport imgPath from \"./Images/service-fast-delivery-parcels-vector-illustration-express-delivery-courier-service-smiling-man-courier-orange-uniform-with-box-his-hands-flat-style-eps-10_669518-23.avif\";\nimport Select from \"@mui/material/Select\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\n\nconst UserFormPage = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [orderId, setOrderId] = useState(\"\");\n  const [instituteId, setInstituteId] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [personalemailid,setPersonalEmailId] = useState(\"\");\n  const [retailer, setRetailer] = useState(\"\");\n  const [isOtherSelected, setIsOtherSelected] = useState(false);\n  const [otherRetailer, setOtherRetailer] = useState(\"\");\n\n  const handleRetailerChange = (e) => {\n    const value = e.target.value;\n    setRetailer(value);\n    setIsOtherSelected(value === \"Other\");\n  };\n\n  const handleOtherRetailerChange = (e) => {\n    setOtherRetailer(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let data;\n    if (retailer !== \"Other\") {\n      data = {\n        RecipientFirstName: firstName,\n        RecipientLastName: lastName,\n        OrderID: orderId,\n        InstituteID: instituteId,\n        RecipientPhoneNumber: phoneNumber,\n        PersonalEmailID: personalemailid,\n        Retailer: retailer,\n      };\n    } else {\n      data = {\n        RecipientFirstName: firstName,\n        RecipientLastName: lastName,\n        OrderID: orderId,\n        InstituteID: instituteId,\n        RecipientPhoneNumber: phoneNumber,\n        PersonalEmailID: personalemailid,\n        Retailer: otherRetailer,\n      };\n    }\n\n    const response = axios\n      .post(`http://localhost:9003/recipient/savedata`, data)\n      .then((response) => {\n        console.log(response);\n        setFirstName(\"\");\n        setLastName(\"\");\n        setOrderId(\"\");\n        setInstituteId(\"\");\n        setPhoneNumber(\"\");\n        setPersonalEmailId(\"\");\n        setRetailer(\"\");\n        setOtherRetailer(\"\");\n        alert(\"Data submitted successfully !\");\n        window.location.reload()\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <>\n      <Header />\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n            <Typography\n              variant=\"h5\"\n              sx={{\n                textAlign: \"center\",\n                marginTop: \"20px\",\n              }}\n            >\n              Fill Your Order Details\n            </Typography>\n\n            <Box\n              component=\"form\"\n              sx={{ backgroundColor: \"white\" }}\n              onSubmit={handleSubmit}\n            >\n              <Grid\n                container\n                spacing={4}\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                sx={{ marginTop: \"1px\" }}\n              >\n                <Grid item xs={12} sm={6.1}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6.1}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6.1}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    label=\"Order ID\"\n                    name=\"orderid\"\n                    value={orderId}\n                    onChange={(e) => setOrderId(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6.1}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    label=\"Institute ID\"\n                    name=\"instituteid\"\n                    value={instituteId}\n                    onChange={(e) => setInstituteId(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6.1}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    label=\"Phone Number\"\n                    name=\"Phone Number\"\n                    value={phoneNumber}\n                    onChange={(e) => setPhoneNumber(e.target.value)}\n                    inputProps={{ maxLength: 10 }}\n                    InputProps={{ inputMode: \"tel\" }}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6.1}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    label=\"Personal Email Id\"\n                    name=\"Personal Email Id\"\n                    value={personalemailid}\n                    onChange={(e) => setPersonalEmailId(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6.1}>\n                  <FormControl required sx={{ minWidth: 200 }}>\n                    <InputLabel id=\"demo-simple-select-autowidth-label\">\n                      Retailer\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-autowidth-label\"\n                      id=\"demo-simple-select-autowidth\"\n                      label=\"Retailer \"\n                      value={retailer}\n                      onChange={handleRetailerChange}\n                      // onChange={(e) =>setRetailer(e.target.value)}\n                    >\n                      <MenuItem value={\"Myntra\"}>Myntra</MenuItem>\n                      <MenuItem value={\"Amazon\"}>Amazon</MenuItem>\n                      <MenuItem value={\"Flipkart\"}>Flipkart</MenuItem>\n                      <MenuItem value={\"Ajio\"}>Ajio</MenuItem>\n                      <MenuItem value={\"Blue-Dart\"}>Blue-Dart</MenuItem>\n                      <MenuItem value={\"Urbanic\"}>Urbanic</MenuItem>\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n                {isOtherSelected && (\n                  <Grid item xs={12} sm={6.1}>\n                    <TextField\n                      id=\"other-retailer\"\n                      label=\"Other Retailer\"\n                      value={otherRetailer}\n                      onChange={handleOtherRetailerChange}\n                    />\n                  </Grid>\n                )}\n\n                <Grid item xs={12} sm={6.1}>\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 1, backgroundColor: \"#0d47a1\" }}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </Box>\n        </Grid>\n        <Grid item xs={4}>\n          <img\n            src={imgPath}\n            style={{ marginTop: \"60px\", width: \"80%\", height: \"80%\" }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport default UserFormPage;\n","/home/yasha/Desktop/SPE/Frontend/src/components/GuardLandingPage.js",["76","77","78"],[],"import { Paper,Grid  } from \"@mui/material\";\nimport React from \"react\";\nimport GuardDashboard from './GuardDashboard';\nimport imgPath from \"./Images/iiit-bangalore.jpg\"\nconst GuardLandingPage =() =>\n{\n    return(\n        <>\n        <GuardDashboard/>\n        <img src={imgPath} style={{ display: \"block\", margin: \"auto\", width: \"100%\", textAlign: \"center\", verticalAlign: \"middle\"}} />\n\n        </>\n    )\n}\n\nexport default GuardLandingPage;","/home/yasha/Desktop/SPE/Frontend/src/components/GuardSearchPage.js",["79","80","81","82","83","84"],[],"import React, { useState, useEffect} from 'react';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Paper,Button,Typography} from \"@mui/material\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport axios from 'axios';\nimport { TransitionProps } from '@mui/material/transitions';\nimport { styled } from \"@mui/material/styles\";\nimport Alert from '@mui/material/Alert';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport GuardDashboard from './GuardDashboard';\nimport { Form } from 'react-bootstrap';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"#e3f2fd\",\n    color: theme.palette.common.black,\n    fontSize: 20,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 20,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n  },\n}));\n\n\nfunction GuardSearchPage () {\n\n    const [searchID, setSearchID] = useState('');\n    const [recipientDetails, setRecipientDetails] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [otp, setOtp] = useState('');\n    const [verified, setVerified] = useState(false);\n    const [openSuccess, setOpenSuccess] = useState(false);\n\n    useEffect(() => {\n      console.log(verified);\n    }, [verified]);\n\n    useEffect(() => {\n      console.log(open);\n    }, [openSuccess]);\n\n    const handleOTP = (e) => {\n      setOtp(e.target.value);\n    };\n    \n    const handleClickOpen = async(e) => {\n      setOpen(true);\n      e.preventDefault();\n      console.log('Sending OTP for institute ID:', searchID);\n      const response = await axios.get(`http://localhost:9003/order/emailOfInstituteID/${searchID}/`)\n      .then(response => {\n          console.log(response.data);\n      })\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleCloseSuccess = () =>{\n      setOpenSuccess(false);\n    };\n    \n    const handleSearchID = (e) => {\n        setSearchID(e.target.value);\n    };\n\n    const handleVerifyOTP = async(e) => {\n      e.preventDefault();\n      console.log('Verifying OTP for institute ID:', searchID);\n      const response = await axios.post(`http://localhost:9003/order/verifyOtp/${searchID}/${otp}`)\n      .then(response => {\n          console.log(response.data);\n          if(response.data === \"OTP Verified!\"){\n            setOpen(false);\n            setVerified(true);\n            setOpenSuccess(true);\n            console.log(verified);\n          }\n          else if(response.data === \"OTP not verified!\"){\n            <Alert>Enter correct OTP!</Alert>\n          }\n      })\n    };\n\n    const handleSearch = async(e) => {\n      e.preventDefault();\n      console.log('Searching for institute ID:', searchID);\n      const response = await axios.get(`http://localhost:9003/order/ordersOfInstituteID/${searchID}/`)\n      .then(response => {\n          console.log(response.data);\n          setRecipientDetails(response.data);\n      })\n    };\n\n  return (\n    <>\n    <GuardDashboard/>\n    <Typography sx={{marginTop:'40px',marginLeft:'40px'}} variant='h5'> Enter Institute ID</Typography> \n      <Form onSubmit={(e) => handleSearch(e)}>\n        <TextField sx={{marginTop:'20px',marginLeft:'40px'}} \n          label=\"Search\"\n          variant=\"outlined\"\n          size='small'\n          value={searchID}\n          onChange={handleSearchID}\n        />\n      <IconButton >\n        <SearchIcon sx={{marginTop:'20px',marginLeft:'10px'}}  onClick={(e) => handleSearch(e)}/>\n      </IconButton>\n      </Form>\n      <Paper elevation={16}\n        sx={{ marginTop: \"40px\", marginLeft: \"80px\", marginRight: \"80px\" }}>\n      <TableContainer>\n        <Table\n        sx={{ minWidth: 700 }}\n        aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell align=\"center\">Order Id</StyledTableCell>\n                {/* <StyledTableCell align=\"center\">Retailer</StyledTableCell> */}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {recipientDetails.map((row) => (\n                      <TableRow key = {row}\n                          sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                          <TableCell align=\"center\">{row}</TableCell>\n                          {/* <TableCell align=\"center\"></TableCell> */}\n                      </TableRow>\n                  ))\n                }\n            </TableBody>\n\n        </Table>\n      </TableContainer>\n              <Button   \n              variant=\"outline\"\n              onClick={handleClickOpen}\n              sx={{\n                size:\"small\",\n                marginTop: \"20px\",\n                backgroundColor: \"#e3f2fd\",\n                mt: 1,\n                color: \"#0d47a1\",\n              }}>\n              Send OTP\n            </Button>\n        <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Authentication</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Ask for OTP Received\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"OTP\"\n            type=\"otp\"\n            fullWidth\n            variant=\"standard\"\n            value={otp}\n            onChange={handleOTP}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleVerifyOTP}>Verify OTP</Button>\n          <Button onClick={handleClose}>Cancel</Button>\n        </DialogActions>\n      </Dialog>\n      {verified && \n        <Dialog open={openSuccess} onClose={handleClose}>\n        <DialogTitle>Authentication Done</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            OTP Verified, hand-over the parcel(s) to the recipient!\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseSuccess}>OK</Button>\n        </DialogActions>\n      </Dialog>}\n    </Paper>\n    </>\n  );\n};\n\nexport default GuardSearchPage;\n","/home/yasha/Desktop/SPE/Frontend/src/components/GuardAddOrderPage.js",["85","86","87","88","89"],[],"import React , { useState } from 'react';\nimport {  Button,TextField,Select,FormControl} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem'; \nimport axios from 'axios';\n\nimport GuardDashboard from \"./GuardDashboard\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"#e3f2fd\",\n    color: theme.palette.common.black,\n    fontSize: 20,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 20,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n  },\n}));\n\nfunction GuardAddOrderPage() {\n  function createData(orderid, firstname, lastname, retailer) {\n    return {\n      OrderID: orderid,\n      FirstName: firstname,\n      LastName: lastname,\n      DateOfDelivery: new Date().toISOString().slice(0, 10),\n      Retailer: retailer,\n    };\n  }\n  const [inputField, setInputFields] = useState([\n    { orderid: \"\", firstname: \"\", lastname: \"\", retailer: \"\" },\n  ]);\n\n  const handleFormChange = (index, e) => {\n    let data = [...inputField];\n    data[index][e.target.name] = e.target.value;\n    setInputFields(data);\n    console.log(data);\n  };\n\n  const handleSubmit = (e) => {\n    //e.preventDefault();\n    const dataToSend = inputField.map((field) =>\n      createData(field.orderid, field.firstname, field.lastname, field.retailer)\n    );\n    console.log(dataToSend);\n    const response = axios.post(\n      `http://localhost:9001/order/saveorderdata`,\n      dataToSend\n    ).then((response)=>{\n      alert(\"Data submitted successfully !\");\n      window.location.reload()\n    });\n  };\n\n  const addFields = (event) => {\n    event.preventDefault();\n    let newField = { orderid: \"\", firstname: \"\", lastname: \"\", retailer: \"\" };\n    setInputFields([...inputField, newField]);\n  };\n\n  return (\n    <>\n      <GuardDashboard />\n      <Paper\n        elevation={16}\n        sx={{ marginTop: \"60px\", marginLeft: \"30px\", marginRight: \"30px\" }}\n      >\n        <TableContainer component={Paper}>\n          <Table\n            component=\"form\"\n            // onSubmit={handleSubmit}\n            sx={{ minWidth: 700 }}\n            aria-label=\"customized table\"\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell align=\"center\">Order Id</StyledTableCell>\n                <StyledTableCell align=\"center\">First Name</StyledTableCell>\n                <StyledTableCell align=\"center\">Last Name</StyledTableCell>\n                <StyledTableCell align=\"center\">Retailer</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {inputField.map((input, index) => (\n                <StyledTableRow key={index.name}>\n                  <StyledTableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      label=\"Order Id\"\n                      name=\"orderid\"\n                      value={input.orderid}\n                      onChange={(e) => handleFormChange(index, e)}\n                    />\n                  </StyledTableCell>\n                  <StyledTableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      label=\"First Name\"\n                      name=\"firstname\"\n                      value={input.firstname}\n                      onChange={(e) => handleFormChange(index, e)}\n                    />\n                  </StyledTableCell>\n                  <StyledTableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      fullWidth\n                      label=\"Last Name\"\n                      name=\"lastname\"\n                      value={input.lastname}\n                      onChange={(e) => handleFormChange(index, e)}\n                    />\n                  </StyledTableCell>\n                  <StyledTableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      label=\"Retailer\"\n                      name=\"retailer\"\n                      value={input.retailer}\n                      onChange={(e) => handleFormChange(index, e)}\n                    />\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n            <Button\n              sx={{ backgroundColor: \"#e3f2fd\", mt: 1, color: \"#0d47a1\" }}\n              type=\"submit\"\n              fullWidth\n              variant=\"outline\"\n              // sx={{ mt: 1}}\n              onClick={addFields}\n            >\n              Add more +\n            </Button>\n            \n          </Table>\n          <Button\n              onClick={handleSubmit}\n              fullWidth\n              variant=\"outline\"\n              sx={{\n                marginTop: \"20px\",\n                backgroundColor: \"#e3f2fd\",\n                mt: 1,\n                color: \"#0d47a1\",\n              }}\n            >\n              Submit Details\n            </Button>\n          \n        </TableContainer>\n        </Paper> \n    </>\n  );\n}\n\nexport default GuardAddOrderPage;\n","/home/yasha/Desktop/SPE/Frontend/src/components/SearchLogByDate.js",["90","91","92","93","94"],[],"import React, { useState, useEffect } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport dayjs from 'dayjs'; \nimport Alert from '@mui/material/Alert';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport { styled } from \"@mui/material/styles\";\nimport Paper from '@mui/material/Paper';\nimport axios from 'axios';\nimport Switch from '@mui/material/Switch';\nimport { RadioButtonChecked, RadioButtonUnchecked } from '@mui/icons-material';\nimport { Grid} from \"@mui/material\";\nimport GuardDashboard from './GuardDashboard';\n\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: \"#e3f2fd\",\n      color: theme.palette.common.black,\n      fontSize: 15,\n      padding: \"20px\"\n    },\n    [`&.${tableCellClasses.body}`]: {\n      fontSize: 15\n    },\n  }));\n\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    // hide last border\n    \"&:last-child td, &:last-child th\": {\n      border: 0,\n    },\n  }));\n\n\nfunction SearchLogByDate (){\n\n    const [search, setSearch] = useState('');\n    const [isDatePicker, setIsDatePicker] = useState(false);\n    const [dateSelected, setDateSelected] = useState('');\n    const [logsByID, setLogsByID] = useState([]);\n    const [logsByDate, setLogsByDate] = useState([]);\n    const [visibleTableID, setVisibleTableID] = useState(false);\n    const [visibleTableDate, setVisibleTableDate] = useState(false);\n    const [isToggled, setIsToggled] = useState(false);\n    const label = { inputProps: { 'aria-label': 'Switch demo' } };\n    const [isIcon, setIsIcon] = useState(false);\n\n    useEffect(() => {\n      console.log(isToggled);\n    }, [isToggled]);\n\n    const handleToggle = () => {\n      setIsToggled(!isToggled);\n      if(visibleTableID === true)\n          setVisibleTableID(false);\n      if(visibleTableDate === true)\n          setVisibleTableDate(false); \n    };  \n\n    const handleSearch = (e) => {\n        console.log(e.target.value);\n        if(e.target.value === '20'){\n            setIsDatePicker(true);\n        }\n        else{\n            setIsDatePicker(false);\n        }\n        setSearch(e.target.value);\n    };\n\n    const handleSearchLogs = async(e) => {\n        e.preventDefault();\n        if(isToggled === false){\n            const searchToUpper = search.toUpperCase();\n            console.log(searchToUpper);\n            await axios.get(`http://localhost:9003/order/search/logsbyID/${searchToUpper}/`)\n            .then((response)=>{\n            setVisibleTableID(true);\n            console.log(response.data);\n            setLogsByID(response.data);\n            })\n            .catch((error)=>{\n            console.log(error);\n            }) \n        }\n        else if(isToggled === true)\n        {\n            console.log(\"Yasha\");\n            const formattedDate = dayjs(dateSelected).format('YYYY-MM-DD');\n            console.log(formattedDate);\n            await axios.get(`http://localhost:9003/order/search/logsbydate/${formattedDate}/`)\n            .then((response)=>{\n            setVisibleTableDate(true);\n            console.log(response.data);\n            setLogsByDate(response.data);\n            })\n            .catch((error)=>{\n            console.log(error);\n            }) \n        }\n    };\n\n    return (\n        <>\n        <GuardDashboard/>\n        <Grid sx={{marginTop:'20px',marginLeft:'20px'}}>\n            {isToggled ? (  \n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                {/* <Alert severity=\"info\">If searching by date, kindly use this format : YYYY-MM-DD </Alert> */}\n                <DatePicker label=\"Logs for Date\" \n                value={dateSelected}\n                onChange={(date) => {setDateSelected(date)}\n                }\n                />\n                \n              </LocalizationProvider> \n              ) : (\n              <TextField\n                label=\"Search\"\n                variant=\"outlined\"\n                value={search}\n                onChange={handleSearch}\n              />\n            )}\n            \n            <IconButton onClick={handleSearchLogs} >\n              <SearchIcon />\n            </IconButton>\n            <Switch {...label} defaultChecked onChange={handleToggle}/>\n          </Grid>\n\n          {visibleTableDate && \n            <Paper\n            elevation={8}\n            sx={{ marginTop: \"40px\", marginLeft: \"20px\" ,marginRight: \"20px\" }}\n            >\n                <TableContainer component={Paper}>\n                  <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                    <TableHead>\n                      <TableRow>\n                        <StyledTableCell>Order ID</StyledTableCell>\n                        <StyledTableCell align=\"center\">First Name</StyledTableCell>\n                        <StyledTableCell align=\"center\">Last Name</StyledTableCell>\n                        <StyledTableCell align=\"center\">Retailer</StyledTableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {logsByDate.map((row, index) => {\n                      const splittedData = row.split(\",\");\n                      console.log(splittedData);\n                      return (\n                      <TableRow\n                        key={index}\n                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                        <TableCell>{splittedData[0]}</TableCell>\n                        <TableCell align=\"center\">{splittedData[1]}</TableCell>\n                        <TableCell align=\"center\">{splittedData[2]}</TableCell>\n                        <TableCell align=\"center\">{splittedData[3]}</TableCell>\n                      </TableRow>\n                      );\n                    })}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n            </Paper> }\n\n          {visibleTableID && \n          <Paper\n          elevation={8}\n          sx={{ marginTop: \"40px\", marginLeft: \"20px\" ,marginRight: \"20px\" }}\n          >\n        <TableContainer>\n        <Table sx={{ minWidth:700 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">Order Id</StyledTableCell>\n              <StyledTableCell align=\"center\">Name</StyledTableCell>\n              {/* <StyledTableCell align=\"center\">Last Name</StyledTableCell> */}\n              <StyledTableCell align=\"center\">Retailer</StyledTableCell>\n              <StyledTableCell align=\"center\">Received</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {logsByID.map((row, index) => {\n          const splittedData = row.split(\",\");\n          console.log(splittedData);\n          return (\n            <TableRow\n              key={index}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n            <TableCell align=\"center\">{splittedData[0]}</TableCell>\n            <TableCell align=\"center\">{splittedData[1]}</TableCell>\n            <TableCell align=\"center\">{splittedData[2]}</TableCell>\n            {/* <TableCell align=\"center\">{splittedData[3]}</TableCell> */}\n            <TableCell align=\"center\">\n            {splittedData[3] === \"true\" ? (\n              <RadioButtonChecked color=\"primary\">Delivered</RadioButtonChecked>\n            ) : (\n              <RadioButtonUnchecked color=\"primary\">Not Delivered</RadioButtonUnchecked>\n            )}\n            </TableCell>\n            </TableRow>\n            );\n          })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      </Paper>\n      }\n       \n  </>\n);\n};\n\nexport default SearchLogByDate;","/home/yasha/Desktop/SPE/Frontend/src/components/Login.js",["95","96","97","98","99"],[],"import React, { useState, useEffect} from 'react';\nimport {useNavigate} from \"react-router-dom\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\nimport AppBar from '@mui/material/AppBar';\nimport { Toolbar } from '@mui/material';\nimport imgPath from \"./Images/unnamed.jpg\"\n\nimport axios from 'axios';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Clartiy Plus Package\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nfunction Login() {\n  const [value, setValue] = React.useState('');\n  const navigate = useNavigate();\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = async(event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n    email: data.get('email'),\n    password: data.get('password'),\n    });\n    console.log(value);\n    if(value === \"Guard\"){\n      const response = await axios.post(`http://localhost:9003/order/login/guard/${data.get('email')}/${data.get('password')}/`)\n      .then(response => {\n        console.log(response.data);\n        if(response.data === \"Valid Login\"){\n          navigate(\"/guardlandingpage\");\n        }\n        else {\n          alert(\"Invalid Credentials, try again!\");\n        }\n      })\n    }\n    else if(value === \"Recipient\"){\n      const response = await axios.post(`http://localhost:9003/recipient/login/recipient/${data.get('email')}/${data.get('password')}/`)\n      .then(response => {\n        console.log(response.data);\n        if(response.data === \"Valid Login\"){\n          navigate(\"/userformpage\");\n        }\n        else {\n          alert(\"Invalid Credentials, try again!\");\n        }\n      })\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" sx={{backgroundColor:'#0d47a1'}}>\n        <Toolbar>\n        <a href=\"https://www.iiitb.ac.in/\" style={{ textDecoration: 'none',color: 'white'}}>\n          <Typography variant=\"h4\" component=\"div\" sx={{ flexGrow: 1, textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline',}}}>\n            Clarity Plus Package\n          </Typography>\n          </a>\n          <img\n            src= {imgPath}\n            style={{ width: 160, height: 90, marginLeft: 'auto' }}\n          />\n        </Toolbar>\n      </AppBar>\n    </Box>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControl\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n              }}>\n            <FormLabel \n            sx = {{\n                fontWeight: 'bold',\n                color: 'black',\n            }}\n            id=\"demo-row-radio-buttons-group-label\">Login As</FormLabel>\n            <RadioGroup\n                row\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                name=\"row-radio-buttons-group\"\n                value={value}\n                onChange={handleChange}\n            >\n            <FormControlLabel sx={{\n                marginRight: 6,\n            }}\n            value=\"Guard\" control={<Radio />} label=\"Guard\" />\n            <FormControlLabel sx={{\n                marginLeft: 5,\n            }}\n            value=\"Recipient\" control={<Radio />} label=\"Recipient\" />\n            </RadioGroup>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Login;","/home/yasha/Desktop/SPE/Frontend/src/components/Header.js",["100","101"],[],"import React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport imgPath from \"./Images/unnamed.jpg\"\nimport {Button} from \"@mui/material\";\n\nconst Header=()=> {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" sx={{backgroundColor:'#0d47a1'}}>\n        <Toolbar >\n        <a href=\"https://www.iiitb.ac.in/\" style={{ textDecoration: 'none',color: 'white'}}>\n          <Typography variant=\"h4\" component=\"div\" sx={{ flexGrow: 1, textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline',}}}>\n            Clarity Plus Package\n          </Typography>\n          </a>\n          <Button \n            variant=\"outlined\"\n            sx={{ \n            fontWeight: 700,\n            color: 'white',\n            textDecoration: 'underline',\n            fontSize: '1.2rem',\n            marginTop:\"20px\",\n            marginLeft: \"1200px\"}} href=\"/\">\n            Logout\n          </Button>\n          <img\n            src= {imgPath}\n            style={{ width: 160, height: 90, marginLeft: 'auto' }}\n          />\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\nexport default Header;","/home/yasha/Desktop/SPE/Frontend/src/components/GuardDashboard.js",[],[],{"ruleId":"102","severity":1,"message":"103","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":12},{"ruleId":"102","severity":1,"message":"106","line":4,"column":23,"nodeType":"104","messageId":"105","endLine":4,"endColumn":36},{"ruleId":"102","severity":1,"message":"107","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":14},{"ruleId":"102","severity":1,"message":"108","line":7,"column":3,"nodeType":"104","messageId":"105","endLine":7,"endColumn":8},{"ruleId":"102","severity":1,"message":"109","line":64,"column":11,"nodeType":"104","messageId":"105","endLine":64,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":226,"column":11,"nodeType":"112","endLine":229,"endColumn":13},{"ruleId":"102","severity":1,"message":"108","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":15},{"ruleId":"102","severity":1,"message":"113","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":10,"column":9,"nodeType":"112","endLine":10,"endColumn":135},{"ruleId":"102","severity":1,"message":"114","line":13,"column":10,"nodeType":"104","messageId":"105","endLine":13,"endColumn":25},{"ruleId":"102","severity":1,"message":"115","line":36,"column":7,"nodeType":"104","messageId":"105","endLine":36,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":62,"column":8,"nodeType":"118","endLine":62,"endColumn":21,"suggestions":"119"},{"ruleId":"102","severity":1,"message":"109","line":72,"column":13,"nodeType":"104","messageId":"105","endLine":72,"endColumn":21},{"ruleId":"102","severity":1,"message":"109","line":93,"column":13,"nodeType":"104","messageId":"105","endLine":93,"endColumn":21},{"ruleId":"102","severity":1,"message":"109","line":111,"column":13,"nodeType":"104","messageId":"105","endLine":111,"endColumn":21},{"ruleId":"102","severity":1,"message":"120","line":2,"column":28,"nodeType":"104","messageId":"105","endLine":2,"endColumn":34},{"ruleId":"102","severity":1,"message":"121","line":2,"column":35,"nodeType":"104","messageId":"105","endLine":2,"endColumn":46},{"ruleId":"102","severity":1,"message":"122","line":11,"column":8,"nodeType":"104","messageId":"105","endLine":11,"endColumn":18},{"ruleId":"102","severity":1,"message":"123","line":12,"column":8,"nodeType":"104","messageId":"105","endLine":12,"endColumn":16},{"ruleId":"102","severity":1,"message":"109","line":65,"column":11,"nodeType":"104","messageId":"105","endLine":65,"endColumn":19},{"ruleId":"102","severity":1,"message":"124","line":9,"column":8,"nodeType":"104","messageId":"105","endLine":9,"endColumn":13},{"ruleId":"102","severity":1,"message":"115","line":36,"column":9,"nodeType":"104","messageId":"105","endLine":36,"endColumn":23},{"ruleId":"102","severity":1,"message":"125","line":50,"column":12,"nodeType":"104","messageId":"105","endLine":50,"endColumn":24},{"ruleId":"102","severity":1,"message":"126","line":58,"column":12,"nodeType":"104","messageId":"105","endLine":58,"endColumn":18},{"ruleId":"102","severity":1,"message":"127","line":58,"column":20,"nodeType":"104","messageId":"105","endLine":58,"endColumn":29},{"ruleId":"102","severity":1,"message":"128","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"129","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"109","line":58,"column":13,"nodeType":"104","messageId":"105","endLine":58,"endColumn":21},{"ruleId":"102","severity":1,"message":"109","line":70,"column":13,"nodeType":"104","messageId":"105","endLine":70,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":95,"column":11,"nodeType":"112","endLine":98,"endColumn":13},{"ruleId":"102","severity":1,"message":"130","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":33,"column":11,"nodeType":"112","endLine":36,"endColumn":13},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'Footer' is defined but never used.","'Paper' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Grid' is defined but never used.","'TransitionProps' is defined but never used.","'StyledTableRow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'open'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'Select' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Alert' is defined but never used.","'isDatePicker' is assigned a value but never used.","'isIcon' is assigned a value but never used.","'setIsIcon' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'IconButton' is defined but never used.",{"desc":"132","fix":"133"},"Update the dependencies array to be: [open, openSuccess]",{"range":"134","text":"135"},[2069,2082],"[open, openSuccess]"]