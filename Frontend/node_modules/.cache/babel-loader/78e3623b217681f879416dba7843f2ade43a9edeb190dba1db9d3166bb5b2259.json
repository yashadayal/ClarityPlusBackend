{"ast":null,"code":"// import React, { useState, useEffect} from 'react';\n// import TextField from '@mui/material/TextField';\n// import IconButton from '@mui/material/IconButton';\n// import SearchIcon from '@mui/icons-material/Search';\n// import { Paper,Button,Typography} from \"@mui/material\";\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell, { tableCellClasses } from '@mui/material/TableCell';\n// import TableContainer from '@mui/material/TableContainer';\n// import TableHead from '@mui/material/TableHead';\n// import TableRow from '@mui/material/TableRow';\n// import axios from 'axios';\n// import { TransitionProps } from '@mui/material/transitions';\n// import { styled } from \"@mui/material/styles\";\n// import Alert from '@mui/material/Alert';\n// import Dialog from '@mui/material/Dialog';\n// import DialogActions from '@mui/material/DialogActions';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogContentText from '@mui/material/DialogContentText';\n// import DialogTitle from '@mui/material/DialogTitle';\n\n// import GuardDashboard from './GuardDashboard';\n// import { Form } from 'react-bootstrap';\n\n// const StyledTableCell = styled(TableCell)(({ theme }) => ({\n//   [`&.${tableCellClasses.head}`]: {\n//     backgroundColor: \"#e3f2fd\",\n//     color: theme.palette.common.black,\n//     fontSize: 20,\n//   },\n//   [`&.${tableCellClasses.body}`]: {\n//     fontSize: 20,\n//   },\n// }));\n\n// const StyledTableRow = styled(TableRow)(({ theme }) => ({\n//   \"&:nth-of-type(odd)\": {\n//     backgroundColor: theme.palette.action.hover,\n//   },\n//   // hide last border\n//   \"&:last-child td, &:last-child th\": {\n//     border: 0,\n//   },\n// }));\n\n// function GuardSearchPage () {\n\n//     const [searchID, setSearchID] = useState('');\n//     const [recipientDetails, setRecipientDetails] = useState([]);\n//     const [open, setOpen] = useState(false);\n//     const [otp, setOtp] = useState('');\n//     const [verified, setVerified] = useState(false);\n//     const [openSuccess, setOpenSuccess] = useState(false);\n//     const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n\n//     useEffect(() => {\n//       console.log(verified);\n//     }, [verified]);\n\n//     useEffect(() => {\n//       console.log(open);\n//     }, [openSuccess]);\n\n//     const handleOTP = (e) => {\n//       setOtp(e.target.value);\n//     };\n\n//     const handleClickOpen = async(e) => {\n//       setOpen(true);\n//       e.preventDefault();\n//       console.log('Sending OTP for institute ID:', searchID);\n//       const response = await axios.get(`http://localhost:9003/order/emailOfInstituteID/${searchID}/`)\n//       .then(response => {\n//           console.log(response.data);\n//       })\n//     };\n\n//     const handleClose = () => {\n//       setOpen(false);\n//     };\n\n//     const handleCloseSuccess = () =>{\n//       setOpenSuccess(false);\n//     };\n\n//     const handleSearchID = (e) => {\n//         setSearchID(e.target.value);\n//     };\n\n//     const handleVerifyOTP = async(e) => {\n//       e.preventDefault();\n//       console.log('Verifying OTP for institute ID:', searchID);\n//       const response = await axios.post(`http://localhost:9003/order/verifyOtp/${searchID}/${otp}`)\n//       .then(response => {\n//           console.log(response.data);\n//           if(response.data === \"OTP Verified!\"){\n//             setOpen(false);\n//             setVerified(true);\n//             setOpenSuccess(true);\n//             console.log(verified);\n//           }\n//           else if(response.data === \"OTP not verified!\"){\n//             <Alert>Enter correct OTP!</Alert>\n//           }\n//       })\n//     };\n\n//     const handleSearch = async(e) => {\n//       e.preventDefault();\n//       console.log('Searching for institute ID:', searchID);\n//       const response = await axios.get(`http://localhost:9003/order/ordersOfInstituteID/${searchID}/`)\n//       .then(response => {\n//           console.log(response.data);\n//           setRecipientDetails(response.data);\n//       })\n//     };\n\n//     const handleConditionChange = (condition) => {\n//       setIsButtonDisabled(!condition); // Set the disabled status of the button based on the condition\n//     }\n\n//   return (\n//     <>\n//     <GuardDashboard/>\n//     <Typography sx={{marginTop:'40px',marginLeft:'40px'}} variant='h5'> Enter Institute ID</Typography> \n//       <Form onSubmit={(e) => handleSearch(e)}>\n//         <TextField sx={{marginTop:'20px',marginLeft:'40px'}} \n//           label=\"Search\"\n//           variant=\"outlined\"\n//           size='small'\n//           value={searchID}\n//           onChange={handleSearchID}\n//         />\n//       <IconButton >\n//         <SearchIcon sx={{marginTop:'20px',marginLeft:'10px'}}  onClick={(e) => handleSearch(e)}/>\n//       </IconButton>\n//       </Form>\n//       <Paper elevation={16}\n//         sx={{ marginTop: \"40px\", marginLeft: \"80px\", marginRight: \"80px\" }}>\n//       <TableContainer>\n//         <Table\n//         sx={{ minWidth: 700 }}\n//         aria-label=\"customized table\">\n//             <TableHead>\n//               <TableRow>\n//                 <StyledTableCell align=\"center\">Order Id</StyledTableCell>\n//                 {/* <StyledTableCell align=\"center\">Retailer</StyledTableCell> */}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {recipientDetails.map((row) => (\n//                       <TableRow key = {row}\n//                           sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n//                           <TableCell align=\"center\">{row}</TableCell>\n//                           {/* <TableCell align=\"center\"></TableCell> */}\n//                       </TableRow>\n//                   ))\n//                 }\n//             </TableBody>\n\n//         </Table>\n//       </TableContainer>\n//               <Button   \n//               variant=\"outline\"\n//               onClick={handleClickOpen}\n//               sx={{\n//                 size:\"small\",\n//                 marginTop: \"20px\",\n//                 backgroundColor: \"#e3f2fd\",\n//                 mt: 1,\n//                 color: \"#0d47a1\",\n//               }}\n//               disabled={isButtonDisabled}  >\n//               Send OTP\n//             </Button>\n//         <Dialog open={open} onClose={handleClose}>\n//         <DialogTitle>Authentication</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             Ask for OTP Received\n//           </DialogContentText>\n//           <TextField\n//             autoFocus\n//             margin=\"dense\"\n//             id=\"name\"\n//             label=\"OTP\"\n//             type=\"otp\"\n//             fullWidth\n//             variant=\"standard\"\n//             value={otp}\n//             onChange={handleOTP}\n//           />\n//         </DialogContent>\n//         <DialogActions>\n//           <Button onClick={handleVerifyOTP}>Verify OTP</Button>\n//           <Button onClick={handleClose}>Cancel</Button>\n//         </DialogActions>\n//       </Dialog>\n//       {verified && \n//         <Dialog open={openSuccess} onClose={handleClose}>\n//         <DialogTitle>Authentication Done</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             OTP Verified, hand-over the parcel(s) to the recipient!\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//           <Button onClick={handleCloseSuccess}>OK</Button>\n//         </DialogActions>\n//       </Dialog>}\n//     </Paper>\n//     </>\n//   );\n// };\n\n// export default GuardSearchPage;","map":{"version":3,"names":[],"sources":["/home/hp/Desktop/ClarityPlusPackage1/ClarityPlusPackage/Frontend/src/components/GuardSearchPage.js"],"sourcesContent":["// import React, { useState, useEffect} from 'react';\n// import TextField from '@mui/material/TextField';\n// import IconButton from '@mui/material/IconButton';\n// import SearchIcon from '@mui/icons-material/Search';\n// import { Paper,Button,Typography} from \"@mui/material\";\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell, { tableCellClasses } from '@mui/material/TableCell';\n// import TableContainer from '@mui/material/TableContainer';\n// import TableHead from '@mui/material/TableHead';\n// import TableRow from '@mui/material/TableRow';\n// import axios from 'axios';\n// import { TransitionProps } from '@mui/material/transitions';\n// import { styled } from \"@mui/material/styles\";\n// import Alert from '@mui/material/Alert';\n// import Dialog from '@mui/material/Dialog';\n// import DialogActions from '@mui/material/DialogActions';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogContentText from '@mui/material/DialogContentText';\n// import DialogTitle from '@mui/material/DialogTitle';\n\n// import GuardDashboard from './GuardDashboard';\n// import { Form } from 'react-bootstrap';\n\n// const StyledTableCell = styled(TableCell)(({ theme }) => ({\n//   [`&.${tableCellClasses.head}`]: {\n//     backgroundColor: \"#e3f2fd\",\n//     color: theme.palette.common.black,\n//     fontSize: 20,\n//   },\n//   [`&.${tableCellClasses.body}`]: {\n//     fontSize: 20,\n//   },\n// }));\n\n// const StyledTableRow = styled(TableRow)(({ theme }) => ({\n//   \"&:nth-of-type(odd)\": {\n//     backgroundColor: theme.palette.action.hover,\n//   },\n//   // hide last border\n//   \"&:last-child td, &:last-child th\": {\n//     border: 0,\n//   },\n// }));\n\n\n// function GuardSearchPage () {\n\n//     const [searchID, setSearchID] = useState('');\n//     const [recipientDetails, setRecipientDetails] = useState([]);\n//     const [open, setOpen] = useState(false);\n//     const [otp, setOtp] = useState('');\n//     const [verified, setVerified] = useState(false);\n//     const [openSuccess, setOpenSuccess] = useState(false);\n//     const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n\n//     useEffect(() => {\n//       console.log(verified);\n//     }, [verified]);\n\n//     useEffect(() => {\n//       console.log(open);\n//     }, [openSuccess]);\n\n//     const handleOTP = (e) => {\n//       setOtp(e.target.value);\n//     };\n    \n//     const handleClickOpen = async(e) => {\n//       setOpen(true);\n//       e.preventDefault();\n//       console.log('Sending OTP for institute ID:', searchID);\n//       const response = await axios.get(`http://localhost:9003/order/emailOfInstituteID/${searchID}/`)\n//       .then(response => {\n//           console.log(response.data);\n//       })\n//     };\n  \n//     const handleClose = () => {\n//       setOpen(false);\n//     };\n\n//     const handleCloseSuccess = () =>{\n//       setOpenSuccess(false);\n//     };\n    \n//     const handleSearchID = (e) => {\n//         setSearchID(e.target.value);\n//     };\n\n//     const handleVerifyOTP = async(e) => {\n//       e.preventDefault();\n//       console.log('Verifying OTP for institute ID:', searchID);\n//       const response = await axios.post(`http://localhost:9003/order/verifyOtp/${searchID}/${otp}`)\n//       .then(response => {\n//           console.log(response.data);\n//           if(response.data === \"OTP Verified!\"){\n//             setOpen(false);\n//             setVerified(true);\n//             setOpenSuccess(true);\n//             console.log(verified);\n//           }\n//           else if(response.data === \"OTP not verified!\"){\n//             <Alert>Enter correct OTP!</Alert>\n//           }\n//       })\n//     };\n\n//     const handleSearch = async(e) => {\n//       e.preventDefault();\n//       console.log('Searching for institute ID:', searchID);\n//       const response = await axios.get(`http://localhost:9003/order/ordersOfInstituteID/${searchID}/`)\n//       .then(response => {\n//           console.log(response.data);\n//           setRecipientDetails(response.data);\n//       })\n//     };\n\n//     const handleConditionChange = (condition) => {\n//       setIsButtonDisabled(!condition); // Set the disabled status of the button based on the condition\n//     }\n\n//   return (\n//     <>\n//     <GuardDashboard/>\n//     <Typography sx={{marginTop:'40px',marginLeft:'40px'}} variant='h5'> Enter Institute ID</Typography> \n//       <Form onSubmit={(e) => handleSearch(e)}>\n//         <TextField sx={{marginTop:'20px',marginLeft:'40px'}} \n//           label=\"Search\"\n//           variant=\"outlined\"\n//           size='small'\n//           value={searchID}\n//           onChange={handleSearchID}\n//         />\n//       <IconButton >\n//         <SearchIcon sx={{marginTop:'20px',marginLeft:'10px'}}  onClick={(e) => handleSearch(e)}/>\n//       </IconButton>\n//       </Form>\n//       <Paper elevation={16}\n//         sx={{ marginTop: \"40px\", marginLeft: \"80px\", marginRight: \"80px\" }}>\n//       <TableContainer>\n//         <Table\n//         sx={{ minWidth: 700 }}\n//         aria-label=\"customized table\">\n//             <TableHead>\n//               <TableRow>\n//                 <StyledTableCell align=\"center\">Order Id</StyledTableCell>\n//                 {/* <StyledTableCell align=\"center\">Retailer</StyledTableCell> */}\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {recipientDetails.map((row) => (\n//                       <TableRow key = {row}\n//                           sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n//                           <TableCell align=\"center\">{row}</TableCell>\n//                           {/* <TableCell align=\"center\"></TableCell> */}\n//                       </TableRow>\n//                   ))\n//                 }\n//             </TableBody>\n\n//         </Table>\n//       </TableContainer>\n//               <Button   \n//               variant=\"outline\"\n//               onClick={handleClickOpen}\n//               sx={{\n//                 size:\"small\",\n//                 marginTop: \"20px\",\n//                 backgroundColor: \"#e3f2fd\",\n//                 mt: 1,\n//                 color: \"#0d47a1\",\n//               }}\n//               disabled={isButtonDisabled}  >\n//               Send OTP\n//             </Button>\n//         <Dialog open={open} onClose={handleClose}>\n//         <DialogTitle>Authentication</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             Ask for OTP Received\n//           </DialogContentText>\n//           <TextField\n//             autoFocus\n//             margin=\"dense\"\n//             id=\"name\"\n//             label=\"OTP\"\n//             type=\"otp\"\n//             fullWidth\n//             variant=\"standard\"\n//             value={otp}\n//             onChange={handleOTP}\n//           />\n//         </DialogContent>\n//         <DialogActions>\n//           <Button onClick={handleVerifyOTP}>Verify OTP</Button>\n//           <Button onClick={handleClose}>Cancel</Button>\n//         </DialogActions>\n//       </Dialog>\n//       {verified && \n//         <Dialog open={openSuccess} onClose={handleClose}>\n//         <DialogTitle>Authentication Done</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             OTP Verified, hand-over the parcel(s) to the recipient!\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//           <Button onClick={handleCloseSuccess}>OK</Button>\n//         </DialogActions>\n//       </Dialog>}\n//     </Paper>\n//     </>\n//   );\n// };\n\n// export default GuardSearchPage;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}